<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net35;net40;net45;netstandard2.0</TargetFrameworks>

    <GeneratePackageOnBuild>$(Generate_GraphShape_Core)</GeneratePackageOnBuild>

    <Title>GraphShape</Title>
    <RootNamespace>GraphShape</RootNamespace>
    <AssemblyName>GraphShape</AssemblyName>

    <!-- Overridden by CI -->
    <Version>1.0.0</Version>
    <AssemblyVersion>1.0.0</AssemblyVersion>
    <FileVersion>1.0.0</FileVersion>

    <Copyright>Copyright © 2019</Copyright>
    <Description>GraphShape is a .NET graph layout framework based on Graph#.
It contains several layout algorithms that allow various kind of layouts (FR, KK, ISOM, LinLog, Simple Tree, Circular, Sugiyama, Compound FDP, Random).

It also provide overlap removal algorithms such as FSA (or One Way FSA) algorithms.

Supported platforms:
- .NET Standard 2.0+
- .NET Core 2.0+
- .NET Framework 3.5+

Supports Source Link</Description>

    <IsPackable>true</IsPackable>
    <PackageId>GraphShape</PackageId>
    <PackageReleaseNotes>➟ Release 1.0.0
General:
- Fully clean the library code.
- Extend support of the library to .NET Framework 3.5+.
- Extend support of the library to .NET Standard 2.0+.
- Uniformize APIs and behaviors of algorithms implementations.

Fixes:
- Various fixes for layout algorithms implementations.
- Various fixes across the library.

Update:
- Algorithm parameters classes are equatable.
- Algorithm cancellation will stop run earlier if possible.

New:
- Add a Random layout algorithm implementation.

API Breaks
- Some public API breaks (but should remain simple to do a migration).
- Replace .NET framework base structs (Point, Vector, Size, Rect and Thickness) by equivalent ones to support .NET Standard.
- Some algorithm were not working well and has been removed (Sugiyama).
- Rename EfficientSugiyama to Sugiyama.
- Namespaces simplifications.

Misc:
- Use JetBrains annotations all over the library as much as possible.</PackageReleaseNotes>
    <PackageTags>GraphSharp GraphShape Graph Layout Algorithm C#</PackageTags>
  </PropertyGroup>

  <!-- Targets defines -->
  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net35'">
    <AssemblyTitle>GraphShape .NET 3.5</AssemblyTitle>
    <DefineConstants>$(DefineConstants);NET35;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net40'">
    <AssemblyTitle>GraphShape .NET 4.0</AssemblyTitle>
    <DefineConstants>$(DefineConstants);NET40;SUPPORTS_ENUMERABLE_COVARIANT;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net45'">
    <AssemblyTitle>GraphShape .NET 4.5</AssemblyTitle>
    <DefineConstants>$(DefineConstants);NET45;SUPPORTS_ENUMERABLE_COVARIANT;SUPPORTS_CALLER_NAME;SUPPORTS_AGGRESSIVE_INLINING;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
    <AssemblyTitle>GraphShape .NET Standard 2.0</AssemblyTitle>
    <DefineConstants>$(DefineConstants);NETSTANDARD2_0;SUPPORTS_ENUMERABLE_COVARIANT;SUPPORTS_CALLER_NAME;SUPPORTS_AGGRESSIVE_INLINING;$(AdditionalConstants)</DefineConstants>
  </PropertyGroup>

  <!-- Dependencies -->
  <ItemGroup>
    <PackageReference Include="QuikGraph" Version="2.2.0" />
  </ItemGroup>
</Project>